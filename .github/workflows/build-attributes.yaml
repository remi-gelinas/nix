name: Build attributes

on:
  workflow_call:
    inputs:
      cache-name:
        required: true
        type: string
      pin:
        type: boolean
        default: false
      cache:
        type: boolean
        default: false
      extra-caches:
        type: string
        default: ""

permissions: {}

jobs:
  attribute-matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: "${{ steps.set-matrix.outputs.matrix }}"
    steps:
      - uses: actions/checkout@v4.1.4
      - uses: DeterminateSystems/nix-installer-action@v10
      - uses: DeterminateSystems/magic-nix-cache-action@v4

      - id: set-matrix
        name: Generate attribute matrix
        run: |
          set -Eeu
          echo "matrix=$(nix eval --json '.#githubActions.matrix')" >> "$GITHUB_OUTPUT"
  
  attribute-build:
    needs: attribute-matrix
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.attribute-matrix.outputs.matrix) }}
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v4.1.4
      - uses: DeterminateSystems/nix-installer-action@v10
      - uses: DeterminateSystems/magic-nix-cache-action@v4
      - uses: cachix/cachix-action@v14
        with:
          name: '${{ inputs.cache-name }}'
          authToken: '${{ secrets.CACHIX_TOKEN }}'
          skipPush: true

      - name: Build "${{ matrix.attr }}"
        id: build-attribute
        run: |
          nix build .#${{ matrix.attr }}

          outPath=$(nix path-info .#${{ matrix.attr }})
          echo "outPath=$outPath" >> "$GITHUB_OUTPUT"

      - name: Cache "${{ matrix.attr }}"
        if: ${{ inputs.cache }}
        run: |
          cachix push ${{ inputs.cache-name }} ${{ steps.build-attribute.outputs.outPath }}

      - name: Pin "${{ matrix.attr }}"
        if: ${{ inputs.pin }}
        run: |
          cachix pin ${{ inputs.cache-name }} ${{ matrix.attr }} ${{ steps.build-attribute.outputs.outPath }} \
            --keep-revisions 1
