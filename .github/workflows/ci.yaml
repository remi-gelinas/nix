name: CI

env:
  NIX_INSTALL_URL: https://github.com/nix-community/nix-unstable-installer/releases/download/nix-2.17.0pre20230609_03f9ff6/install
  CACHIX_CACHE_NAME: remi-gelinas-nix
  NIXPKGS_INPUT_KEYS: nixpkgs-unstable
  EXTRA_NIX_CONFIG: |
    experimental-features = nix-command flakes
    substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://remi-gelinas-nix.cachix.org
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= remi-gelinas-nix.cachix.org-1:nj3SWe8g0jlpzvzvgE6znxY21XaONHxJ1qZQQsHBBNA=

on:
  pull_request:
    branches:
      - trunk

permissions: {}

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      CACHIX_CACHE_NAME: ${{ steps.set-env.outputs.CACHIX_CACHE_NAME }}
      NIX_INSTALL_URL: ${{ steps.set-env.outputs.NIX_INSTALL_URL }}
      EXTRA_NIX_CONFIG: ${{ steps.set-env.outputs.EXTRA_NIX_CONFIG }}
    steps:
      - id: set-env
        run: |
          echo "CACHIX_CACHE_NAME=${{ env.CACHIX_CACHE_NAME }}" >> "$GITHUB_OUTPUT"
          echo "NIX_INSTALL_URL=${{ env.NIX_INSTALL_URL }}" >> "$GITHUB_OUTPUT"
          echo "EXTRA_NIX_CONFIG=${{ env.EXTRA_NIX_CONFIG }}" >> "$GITHUB_OUTPUT"

  nixpkgs-inputs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4.0.0
      - name: Check nixpkgs inputs
        uses: DeterminateSystems/flake-checker-action@v5
        with:
          send-statistics: false
          nixpkgs-keys: "${{ env.NIXPKGS_INPUT_KEYS }}"

  lint:
    needs: set-env
    uses: ./.github/workflows/lint.yaml
    permissions:
      contents: read
    with:
      nix-config: ${{ needs.set-env.outputs.EXTRA_NIX_CONFIG }}
    secrets: inherit

  build-attributes:
    needs: set-env
    uses: ./.github/workflows/build-attributes.yaml
    permissions:
      contents: read
    with:
      cache-name: ${{ needs.set-env.outputs.CACHIX_CACHE_NAME }}
      nix-install-url: ${{ needs.set-env.outputs.NIX_INSTALL_URL }}
      nix-config: ${{ needs.set-env.outputs.EXTRA_NIX_CONFIG }}
    secrets: inherit

  collect:
    runs-on: ubuntu-latest
    needs: [nixpkgs-inputs, lint, build-attributes]
    if: always()
    steps:
      - run: true