name: Build and cache flake attributes

env:
  NIX_INSTALL_URL: https://github.com/nix-community/nix-unstable-installer/releases/download/nix-2.17.0pre20230609_03f9ff6/install
  CACHIX_CACHE_NAME: remi-gelinas-nix
  EXTRA_NIX_CONFIG: |
    auto-optimise-store = true
    experimental-features = nix-command flakes
    substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://remi-gelinas-nix.cachix.org
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= remi-gelinas-nix.cachix.org-1:nj3SWe8g0jlpzvzvgE6znxY21XaONHxJ1qZQQsHBBNA=

on:
  pull_request:
    branches:
      - "trunk"
    paths:
      - "**"
      - "!**.md"
      - "!**.org"
  push:
    branches:
      - "trunk"
    paths:
      - "**"
      - "!**.md"
      - "!**.org"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-cache-flake-inputs:
    name: Build and cache flake inputs
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3.5.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'
          install_url: '${{ env.NIX_INSTALL_URL }}'
          extra_nix_config: "${{ env.EXTRA_NIX_CONFIG }}"

      - uses: cachix/cachix-action@v12
        with:
          name: '${{ env.CACHIX_CACHE_NAME }}'
          authToken: '${{ secrets.CACHIX_TOKEN }}'
          skipPush: true
      
      - name: Build and cache flake inputs
        run: |
          nix flake archive \
            --json \
          | jq -r '.path,(.inputs|to_entries[].value.path)' \
          | cachix push ${{ env.CACHIX_CACHE_NAME }}

  generate-output-matrix:
    name: Generate output attribute matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: "${{ steps.generate-matrix.outputs.output_matrix }}"
    steps:
      - name: Clone repository
        uses: actions/checkout@v3.5.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11.4

      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'
          install_url: '${{ env.NIX_INSTALL_URL }}'
          extra_nix_config: "${{ env.EXTRA_NIX_CONFIG }}"

      - id: generate-matrix
        run: |
          SYSTEMS=$(nix eval .#debug.systems --json)
          INPUT=$(nix flake show --all-systems --json)

          OUTPUT_MATRIX=$(python .github/scripts/generate_output_matrix.py --systems "$SYSTEMS" --input "$INPUT")
          echo "output_matrix=$OUTPUT_MATRIX" >> "$GITHUB_OUTPUT"
  
  build-and-cache-output:
    name: Build and cache flake attribute
    needs: [generate-output-matrix]
    strategy:
      fail-fast: false
      matrix:
        output: "${{ fromJson(needs.generate-output-matrix.outputs.matrix) }}"
    runs-on: "${{ matrix.output.runner }}"
    steps:
      - name: Clone repository
        uses: actions/checkout@v3.5.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'
          install_url: '${{ env.NIX_INSTALL_URL }}'
          extra_nix_config: "${{ env.EXTRA_NIX_CONFIG }}"

      - uses: cachix/cachix-action@v12
        with:
          name: '${{ env.CACHIX_CACHE_NAME }}'
          authToken: '${{ secrets.CACHIX_TOKEN }}'
          skipPush: true
      
      - name: Build and cache "${{ matrix.output.attribute }}"
        run: |
          nix-store \
            -qR \
            --include-outputs \
            $(nix-store -qd \
              $(nix build .#${{ matrix.output.attribute }} --print-out-paths)) \
          | grep -v '\.drv$' \
          | cachix push ${{ env.CACHIX_CACHE_NAME }}