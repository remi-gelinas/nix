name: CI

env:
  CACHIX_CACHE_NAME: remi-gelinas-nix
  NIXPKGS_INPUT_KEYS: nixpkgs-unstable
  EXTRA_SUBSTITUTERS: nix-community

on:
  pull_request:
    branches:
      - trunk

permissions: {}

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      CACHIX_CACHE_NAME: ${{ steps.set-env.outputs.CACHIX_CACHE_NAME }}
      EXTRA_SUBSTITUTERS: ${{ steps.set-env.outputs.EXTRA_SUBSTITUTERS }}
    steps:
      - id: set-env
        run: |
          echo "CACHIX_CACHE_NAME=${{ env.CACHIX_CACHE_NAME }}" >> "$GITHUB_OUTPUT"
          echo "EXTRA_SUBSTITUTERS=${{ env.EXTRA_SUBSTITUTERS }}" >> "$GITHUB_OUTPUT"

  nixpkgs-inputs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4.1.4
      - name: Check nixpkgs inputs
        uses: DeterminateSystems/flake-checker-action@v5
        with:
          send-statistics: false
          nixpkgs-keys: "${{ env.NIXPKGS_INPUT_KEYS }}"

  lint:
    needs: set-env
    uses: ./.github/workflows/lint.yaml
    permissions:
      contents: read
    secrets: inherit

  build-attributes:
    name: Build attributes
    needs: set-env
    uses: ./.github/workflows/build-attributes.yaml
    permissions:
      contents: read
    with:
      cache-name: ${{ needs.set-env.outputs.CACHIX_CACHE_NAME }}
    secrets: inherit

  attributes-built:
    # see https://github.community/t/status-check-for-a-matrix-jobs/127354/7
    name: Attributes built
    needs: [build-attributes]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check all matrix job status
        # see https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#needs-context
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
                contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || contains(needs.*.result, 'skipped')
          }}
        run: exit 1