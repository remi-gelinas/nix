name: Build attributes

on:
  workflow_call:
    inputs:
      cache-name:
        required: true
        type: string
      pin:
        type: boolean
        default: false
      cache:
        type: boolean
        default: false
      nix-config:
        required: false
        type: string
      nix-install-url:
        required: true
        type: string

permissions: {}

jobs:
  attribute-matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: "${{ steps.set-matrix.outputs.matrix }}"
    steps:
      - uses: actions/checkout@v4.0.0
      - uses: cachix/install-nix-action@v23
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'
          install_url: '${{ inputs.nix-install-url }}'
          extra_nix_config: "${{ inputs.nix-config }}"
      - id: set-matrix
        name: Generate attribute matrix
        run: |
          set -Eeu
          echo "matrix=$(nix eval --json '.#githubActions.matrix')" >> "$GITHUB_OUTPUT"
  
  attribute-build:
    needs: attribute-matrix
    permissions:
      contents: read
    strategy:
      matrix: ${{ fromJson(needs.attribute-matrix.outputs.matrix) }}
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v4.0.0
      - uses: cachix/install-nix-action@v23
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'
          install_url: '${{ inputs.nix-install-url }}'
          extra_nix_config: "${{ inputs.nix-config }}"
      - uses: cachix/cachix-action@v12
        with:
          name: '${{ inputs.cache-name }}'
          authToken: '${{ secrets.CACHIX_TOKEN }}'
          skipPush: true
      - name: Build "${{ matrix.attr }}"
        id: build
        run: |
          nix build .#${{ matrix.attr }}

          outPath=$(nix path-info .#${{ matrix.attr }})
          echo "outPath=$outPath" >> "$GITHUB_OUTPUT"
      - name: Cache "${{ matrix.attr }}"
        if: inputs.cache == 'true'
        run: |
          cachix push ${{ inputs.cache-name }} ${{ steps.build.outputs.outPath }}
      - name: Pin "${{ matrix.attr }}"
        if: inputs.pin == 'true'
        run: |
          cachix pin ${{ inputs.cache-name }} ${{ matrix.attr }} ${{ steps.build.outputs.outPath }} \
            --keep-revisions 1
